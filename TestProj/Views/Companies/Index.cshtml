@model PagedList.IPagedList<TestProj.Models.Company>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Companies</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Companies", FormMethod.Get))
{
    <div>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
    </div>
    <div>
        <text>Show only companies with AdminUsers:</text>
        Yes: @Html.RadioButton("AdminUsersOnly", "AdminUsersOnly", new { @class = "radio-inline", name = "adminUsersOnly" })
        No:  @Html.RadioButton("AdminUsersOnly", "AllUsers", new { @class = "radio-inline", name = "adminUsersOnly" })
    </div>
    <input type="submit" value="Search" />
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Country", "Index", new { sortOrder = ViewBag.CountrySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Ajax.ActionLink(item.Name, "GetUsers", new { id = item.Id }, new AjaxOptions { UpdateTargetId = "container", OnSuccess = "hideFunction" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

<div id="container">
</div>

